import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class MainFrame extends JFrame implements ActionListener {
    private JButton calculateButton, fillButton, clearButton;
    private JLabel maxLabel, resultLabel;
    private JTextField nField;
    private JTable table;

    public MainFrame() {
        setTitle("Max and Sum");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        // Create components
        JPanel panel = new JPanel(new BorderLayout());
        JPanel inputPanel = new JPanel(new GridLayout(2, 2));

        calculateButton = new JButton("Calculate");
        calculateButton.addActionListener(this);

        fillButton = new JButton("Fill");
        fillButton.addActionListener(this);

        clearButton = new JButton("Clear");
        clearButton.addActionListener(this);

        inputPanel.add(fillButton);
        inputPanel.add(calculateButton);
        inputPanel.add(clearButton);

        maxLabel = new JLabel("Max element: ");
        resultLabel = new JLabel("Result: ");

        panel.add(inputPanel, BorderLayout.NORTH);
        panel.add(maxLabel, BorderLayout.WEST);
        panel.add(resultLabel, BorderLayout.SOUTH);

        // Create table
        String[] columnNames = new String[15];
        for (int i = 0; i < 15; i++) {
            columnNames[i] = "" + i;
        }
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);
        table = new JTable(model);

        JScrollPane scrollPane = new JScrollPane(table);
        panel.add(scrollPane, BorderLayout.CENTER);

        // Add panel to frame
        getContentPane().add(panel);

        // Show frame
        pack();
        setVisible(true);
    }

    public void actionPerformed(ActionEvent e) {
        if (e.getSource() == calculateButton) {
            calculate();
        } else if (e.getSource() == fillButton) {
            fill();
        } else if (e.getSource() == clearButton) {
            clear();
        }
    }

    private void fill() {
        // Read input from file
        int[][] A = new int[15][15];
        int n = 0;
        try {
            File file = new File("input.txt");
            Scanner scan = new Scanner(file);
            n = scan.nextInt();
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    A[i][j] = scan.nextInt();
                }
            }
        } catch (FileNotFoundException ex) {
            ex.printStackTrace();
        }

        // Display table
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(n);
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                model.setValueAt(A[i][j], i, j);
            }
        }
    }

    private void clear() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        maxLabel.setText("Max element: ");
        resultLabel.setText("Result: ");
    }

    private void calculate() {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int n = model.getRowCount();
        int[][] A = new int[n][n];

        // Fill array with table data
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                A[i][j] = Integer.parseInt(model.getValueAt(i, j).toString());
            }
        }

        // Calculate max element and sum
        int max = A[0][0];
        int sum = 0;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (A[i][j] > max) {
                    max = A[i][j];
                }
                sum += A[i][j];
            }
        }

        // Display result
        maxLabel.setText("Max element: " + max);
        resultLabel.setText("Result: " + sum);
    }

    public static void main(String[] args) {
        MainFrame frame = new MainFrame();
    }
}
